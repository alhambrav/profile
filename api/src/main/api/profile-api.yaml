openapi: 3.0.0
servers:
  - url: 'http://localhost:8080/crafter-profile'
info:
  description: |-
    Crafter Profile API
  version: '4.1.10'
  title: Crafter Profile
  termsOfService: ''
  contact:
    email: info@craftercms.org
  license:
    name: GPL 3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
externalDocs:
  description: CrafterCMS - Profile
  url: 'https://docs.craftercms.org/current/reference/modules/profile/index.html'
tags:
  - name: access_token
    description: Access token management
  - name: tenant
    description: Tenant management
  - name: profile
    description: Profile management
  - name: authentication
    description: Authentication
  - name: monitoring
    description: Monitoring operations

paths:

  /api/1/access_token/create:
    post:
      security: []
      tags:
        - access_token
      summary: Create Access Token
      operationId: createAccessToken
      description: Creates a new access token
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The access token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
            example:
              application: sample-app
              master: false
              tenantPermissions:
                - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                  tenant: sample-tenant
              expiresOn: 1704067200000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
              example:
                application: sample-app
                master: false
                tenantPermissions:
                  - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                    tenant: sample-tenant
                expiresOn: 1704067200000
                id: a3f1a69c-3a7d-4b28-a944-61a7dc6877b8
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/access_token/{id}:
    get:
      security: []
      tags:
        - access_token
      summary: Get Access Token
      operationId: getAccessToken
      description: Get the information for a specific access token.
      parameters:
        - name: id
          in: path
          description: The ID of specific access token being requested for more information
          required: true
          schema:
            type: string
          example: b4d44030-d0af-11e3-9c1a-0800200c9a66
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccessToken'
              example:
                application: crafterengine
                master: false
                tenantPermissions:
                  - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                    tenant: "*"
                expiresOn: 1704067200000
                id: b4d44030-d0af-11e3-9c1a-0800200c9a66
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/access_token/all:
    get:
      security: []
      tags:
        - access_token
      summary: Get All Access Tokens
      operationId: getAllAccessToken
      description: Get all existing access tokens.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
              example:
                - application: adminconsole
                  master: true
                  tenantPermissions:
                    - allowedActions: ["*"]
                      tenant: "*"
                  expiresOn: 1704067200000
                  id: e8f5170c-877b-416f-b70f-4b09772f8e2d
                - application: crafterengine
                  master: false
                  tenantPermissions:
                    - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                      tenant: "*"
                  expiresOn: 1704067200000
                  id: b4d44030-d0af-11e3-9c1a-0800200c9a66
                - application: craftersocial
                  master: false
                  tenantPermissions:
                    - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                      tenant: "*"
                  expiresOn: 1704067200000
                  id: 2ba3ac10-c43e-11e3-9c1a-0800200c9a66
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/access_token/{id}/delete:
    post:
      security: []
      tags:
        - access_token
      summary: Delete Access Token
      operationId: deleteAccessToken
      description: Deletes an access token
      parameters:
        - name: id
          in: path
          description: The ID to be deleted
          required: true
          schema:
            type: string
          example: a3f1a69c-3a7d-4b28-a944-61a7dc6877b8
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The access token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessToken'
            example:
              application: sample-app
              master: false
              tenantPermissions:
                - allowedActions: ["MANAGE_TICKETS", "READ_TENANT", "MANAGE_PROFILES"]
                  tenant: sample-tenant
              expiresOn: 1704067200000
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/create:
    post:
      security: []
      tags:
        - tenant
      summary: Create Tenant
      operationId: createTenant
      description: Creates the given tenant
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The tenant to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileTenant'
            example:
              name: sample-tenant
              verifyNewProfiles: false
              availableRoles:
                - "APP_ADMIN"
                - "APP_USER"
              attributeDefinitions:
                - name: "firstName"
                  metadata:
                    - label: "First Name"
                      type: "TEXT"
                      displayOrder: 0.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
                - name: "lastName"
                  metadata:
                    - label: "Last Name"
                      type: "TEXT"
                      displayOrder: 1.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
                - name: "avatarLink"
                  metadata:
                    - label: "Avatar Link"
                      type: "TEXT"
                      displayOrder: 3.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: false
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}:
    get:
      security: []
      tags:
        - tenant
      summary: Get Tenant
      operationId: getTenant
      description: Returns a tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: false
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/update:
    post:
      security: []
      tags:
        - tenant
      summary: Update Tenant
      operationId: updateTenant
      description: Updates the given tenant
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The updates to tenant
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileTenant'
            example:
              name: sample-tenant
              verifyNewProfiles: false
              ssoEnable: true
              availableRoles:
                - "APP_ADMIN"
                - "APP_USER"
              attributeDefinitions:
                - name: "firstName"
                  metadata:
                    - label: "First Name"
                      type: "TEXT"
                      displayOrder: 0.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
                - name: "lastName"
                  metadata:
                    - label: "Last Name"
                      type: "TEXT"
                      displayOrder: 1.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
                - name: "avatarLink"
                  metadata:
                    - label: "Avatar Link"
                      type: "TEXT"
                      displayOrder: 3.0
                  permissions:
                    - application: "*"
                      allowedActions:
                        - "*"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: false
                ssoEnabled: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/delete:
    post:
      security: []
      tags:
        - tenant
      summary: Delete Tenant
      operationId: deleteTenant
      description: Deletes a tenant
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/count:
    get:
      security: []
      tags:
        - tenant
      summary: Count Tenants
      operationId: countTenants
      description: Returns the total number of tenants.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
              example: 1
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/all:
    get:
      security: []
      tags:
        - tenant
      summary: Get All Tenants
      operationId: getAllTenants
      description: Returns a list with all the tenants.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                - name: default
                  verifyNewProfiles: false
                  availableRoles:
                    - "SOCIAL_SUPERADMIN"
                    - "PROFILE_ADMIN"
                    - "PROFILE_SUPERADMIN"
                    - "PROFILE_TENANT_ADMIN"
                  ssoEnabled: false
                  attributeDefinitions:
                    - name: "firstName"
                      metadata:
                        - label: "First Name"
                          type: "TEXT"
                          displayOrder: 0.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "lastName"
                      metadata:
                        - label: "Last Name"
                          type: "TEXT"
                          displayOrder: 1.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "displayName"
                      metadata:
                        - label: "Display Name"
                          type: "TEXT"
                          displayOrder: 2.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "avatarLink"
                      metadata:
                        - label: "Avatar Link"
                          type: "TEXT"
                          displayOrder: 3.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "socialContexts"
                      metadata:
                        - label: "Social Contexts"
                          type: "COMPLEX"
                          displayOrder: 5.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                  id: 5926f6c524d9aaad9804a401
                - name: sample-tenant
                  verifyNewProfiles: false
                  availableRoles:
                    - "APP_ADMIN"
                    - "APP_USER"
                  ssoEnabled: false
                  attributeDefinitions:
                    - name: "firstName"
                      metadata:
                        - label: "First Name"
                          type: "TEXT"
                          displayOrder: 0.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "lastName"
                      metadata:
                        - label: "Last Name"
                          type: "TEXT"
                          displayOrder: 1.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                    - name: "avatarLink"
                      metadata:
                        - label: "Avatar Link"
                          type: "TEXT"
                          displayOrder: 3.0
                      permissions:
                        - application: "*"
                          allowedActions:
                            - "*"
                      defaultValue: null
                  id: 5926ee77d4c6ad51e5e44f45
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/verify_new_profiles:
    post:
      security: []
      tags:
        - tenant
      summary: Verify New Profiles
      operationId: verifyNewProfiles
      description: Sets if new profiles for the specified tenant should be verified or not.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: verify
          in: query
          description: True to verify new profiles through email, false otherwise
          required: true
          schema:
            type: string
          example: "true"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/roles/add:
    post:
      security: []
      tags:
        - tenant
      summary: Add Roles
      operationId: addRoles
      description: Adds the given roles to the specified tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: role
          in: query
          description: The roles to add
          required: true
          schema:
            type: string
          example: "APP_TEST,APP_REPORT"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                  - "APP_TEST"
                  - "APP_REPORT"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/roles/remove:
    post:
      security: []
      tags:
        - tenant
      summary: Remove Roles
      operationId: removeRoles
      description: Removes the given roles to the specified tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: role
          in: query
          description: The roles to add
          required: true
          schema:
            type: string
          example: "APP_TEST,APP_REPORT"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/attribute_definitions/add:
    post:
      security: []
      tags:
        - tenant
      summary: Add Attributes
      operationId: addAttributes
      description: Adds the given attribute definitions to the specified tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The attribute(s) to be added
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProfileTenantAttribute'
            example:
              name: "Nickname"
              metadata:
                - label: "Nickname"
                  type: "TEXT"
                  displayOrder: 1.0
              permissions:
                - application: "*"
                  allowedActions:
                    - "*"
              defaultValue: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "Nickname"
                    metadata:
                      - label: "Nickname"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/attribute_definitions/update:
    post:
      security: []
      tags:
        - tenant
      summary: Update Attributes
      operationId: updateAttributes
      description: Updates the given attribute definitions of the specified tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
      requestBody:
        description: The attribute(s) to be updated
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProfileTenantAttribute'
            example:
              name: "Nickname"
              metadata:
                - label: "Nickname"
                  type: "TEXT"
                  displayOrder: 10
              permissions:
                - application: "*"
                  allowedActions:
                    - "*"
              defaultValue: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: true
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                ssoEnabled: false
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                  - name: "Nickname"
                    metadata:
                      - label: "Nickname"
                        type: "TEXT"
                        displayOrder: 10
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                    defaultValue: null
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/tenant/{name}/attribute_definitions/remove:
    post:
      security: []
      tags:
        - tenant
      summary: Remove Attributes
      operationId: removeAttributes
      description: Removes the given attribute definitions from the specified tenant.
      parameters:
        - name: name
          in: path
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: attributeName
          in: query
          description: The name of the attributes whose definitions should be removed (the parameter can be repeated)
          required: true
          schema:
            type: string
          example: nickname
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTenant'
              example:
                name: sample-tenant
                verifyNewProfiles: false
                availableRoles:
                  - "APP_ADMIN"
                  - "APP_USER"
                attributeDefinitions:
                  - name: "firstName"
                    metadata:
                      - label: "First Name"
                        type: "TEXT"
                        displayOrder: 0.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                  - name: "lastName"
                    metadata:
                      - label: "Last Name"
                        type: "TEXT"
                        displayOrder: 1.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                  - name: "avatarLink"
                    metadata:
                      - label: "Avatar Link"
                        type: "TEXT"
                        displayOrder: 3.0
                    permissions:
                      - application: "*"
                        allowedActions:
                          - "*"
                id: 5926ee77d4c6ad51e5e44f45
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/create:
    post:
      security: []
      tags:
        - profile
      summary: Create Profile
      operationId: createProfile
      description: Creates a new profile for a specific tenant.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The name of the tenant to add the profile to.
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: username
          in: query
          description: The profile’s username.
          required: true
          schema:
            type: string
          example: john.doe
        - name: password
          in: query
          description: The profile’s password.
          schema:
            type: string
          example: passw0rd
        - name: email
          in: query
          description: The profile’s email.
          required: true
          schema:
            type: string
          example: john.doe@example.com
        - name: enabled
          in: query
          description: If the profile should be enabled or not.
          required: true
          schema:
            type: string
          example: false
        - name: role
          in: query
          description: The profile’s roles.
          schema:
            type: string
          example: false
        - name: attributes
          in: query
          description: The additional attributes to add to the profile (specify a JSON string)
          schema:
            type: string
          example: {"firstName":"John", "lastName":"Doe"}
        - name: verificationUrl
          in: query
          description: The URL (sans token) the user needs to go in case it needs to verify the created profile (verification depends on tenant)
          schema:
            type: string
          example: verificationUrl
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592715d4d4c650e226b03b62"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/update:
    post:
      security: []
      tags:
        - profile
      summary: Update Profile
      operationId: updateProfile
      description: Updates the profile’s info.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: query
          description: The profile's id.
          schema:
            type: string
          example: 592887d7d4c650213cc2f400
        - name: username
          in: query
          description: The new username for the profile.
          required: true
          schema:
            type: string
          example: john.doe
        - name: password
          in: query
          description: The new password for the profile.
          schema:
            type: string
          example: passw0rd
        - name: email
          in: query
          description: The new email for the profile.
          required: true
          schema:
            type: string
          example: john.doe@example.com
        - name: enabled
          in: query
          description: If the profile should be enabled or not.
          required: true
          schema:
            type: string
          example: false
        - name: role
          in: query
          description: The new roles for the profile.
          schema:
            type: string
          example: false
        - name: attributes
          in: query
          description: The attributes to update (specify a JSON string)
          schema:
            type: string
          example: {"firstName":"John", "lastName":"Doe"}
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {"firstName": "John", "lastName": "Doe"}
                id: "592887d7d4c650213cc2f400"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/verify:
    post:
      security: []
      tags:
        - profile
      summary: Verify Profile
      operationId: verifyProfile
      description: Sets the profile as verified if the verification token is valid.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: verificationTokenId
          in: query
          description: The verification token ID.
          schema:
            type: string
          example: 055d58c4-fabb-44da-96eb-261e24e1d0c9
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/enable:
    post:
      security: []
      tags:
        - profile
      summary: Enable Profile
      operationId: enableProfile
      description: Enables a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/disable:
    post:
      security: []
      tags:
        - profile
      summary: Disable Profile
      operationId: disableProfile
      description: Disables a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/roles/add:
    post:
      security: []
      tags:
        - profile
      summary: Add Roles
      operationId: addRoles
      description: Assign roles to a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: roles
          in: query
          description: The roles to assign
          schema:
            type: string
          example: APP_TEST,APP_REPORT
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {}
                id: "592715d4d4c650e226b03b62"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/roles/remove:
    post:
      security: []
      tags:
        - profile
      summary: Remove Roles
      operationId: removeRoles
      description: Remove assigned roles from a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: roles
          in: query
          description: The roles to remove
          schema:
            type: string
          example: APP_TEST,APP_REPORT
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592715d4d4c650e226b03b62"
        '400':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attributes:
    get:
      security: []
      tags:
        - profile
      summary: Get Attributes
      operationId: getAttributes
      description: Returns the attributes of a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttributes'
              example:
                firstName: "John"
                lastName: "Doe"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attributes/update:
    post:
      security: []
      tags:
        - profile
      summary: Update Attributes
      operationId: updateAttributes
      description: Updates the attributes of a profile. <br><br> <i>NOTE:</i> <i>The specified attributes will be merged with existing attributes.</i>
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      requestBody:
        description: The attribute(s) to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAttributes'
            example:
              avatarLink: "/static-assets/images/avatar.png"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {"firstName":"John", "lastName":"Doe", "avatarLink":"/static-assets/images/avatar.png"}
                id: "592887d7d4c650213cc2f400"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attributes/remove:
    post:
      security: []
      tags:
        - profile
      summary: Remove Attributes
      operationId: removeAttributes
      description: Removes a list of attributes of a profile
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesName
          in: query
          description: The name of the attributes to remove
          schema:
            type: string
          example: avatarLink
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      requestBody:
        description: The attribute(s) to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAttributes'
            example:
              avatarLink: "/static-assets/images/avatar.png"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {"firstName":"John", "lastName":"Doe"}
                id: "592887d7d4c650213cc2f400"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/delete:
    post:
      security: []
      tags:
        - profile
      summary: Delete Profile
      operationId: deleteProfile
      description: Deletes a profile
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/one_by_query:
    post:
      security: []
      tags:
        - profile
      summary: Get Profile By Query
      operationId: getProfileByQuery
      description: Returns the single profile that matches the specified query
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: query
          in: query
          description: The Mongo query used to search for the profiles <br><br> <b><i>Warning:</i></b> The query must not contain the <i>$where</i> operator, the tenant's name (already specified) or any non-readable attribute by the application
          schema:
            type: string
          example: "%7B%20%22username%22%3A%20%22john.doe%22%20%7D"
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile
      operationId: getProfile
      description: Returns the profile for a specified ID.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile’s ID
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
          example: firstName,lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttributes'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_username:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile By Username
      operationId: getProfileByUsername
      description: Returns the user for the specified tenant and username.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: username
          in: query
          description: The profile's username
          required: true
          schema:
            type: string
          example: john.doe
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttributes'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_ticket:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile By Ticket
      operationId: getProfileByTicket
      description: Returns the profile for the specified ticket.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: ticketId
          in: query
          description: The ID ticket of the authenticated profile
          required: true
          schema:
            type: string
          example: 592887d7d4c650213cc2f400
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttributes'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: []
                attributes: {}
                id: "592887d7d4c650213cc2f400"
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/count:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile Count
      operationId: getProfileCount
      description: Returns the number of profiles for the specified tenant.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
              example: 1
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/count_by_query:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile Count By Query
      operationId: getProfileCountByQuery
      description: Returns the number of profiles that match the query for the specified tenant.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: query
          in: query
          description: The Mongo query used to search for the profiles. <br><br> <b><i>Warning:</i></b> The query must not contain the <i>$where</i> operator, the tenant's name (already specified) or any non-readable attribute by the application
          schema:
            type: string
          example: "%7B%20%22username%22%3A%20%22john.doe%22%20%7D"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
              example: 1
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_query:
    get:
      security: []
      tags:
        - profile
      summary: Get Profiles By Query
      operationId: getProfilesByQuery
      description: Returns the profiles that match the specified query.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: query
          in: query
          description: The Mongo query used to search for the profiles. <br><br> <b><i>Warning:</i></b> The query must not contain the <i>$where</i> operator, the tenant's name (already specified) or any non-readable attribute by the application
          schema:
            type: string
          example: "%7B%20%22username%22%3A%20%22john.doe%22%20%7D"
        - name: sortBy
          in: query
          description: Profile attribute to sort the list by
          schema:
            type: string
        - name: sortOrder
          in: query
          description: The sort order (either ASC or DESC)
          schema:
            type: string
        - name: start
          in: query
          description: From the entire list of results, the position where the actual results should start (useful for pagination)
          schema:
            type: string
        - name: count
          in: query
          description: The number of profiles to return
          schema:
            type: string
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileAttributes'
              example:
                - username: "john.doe"
                  email: "john.doe@example.com"
                  verified: false
                  enabled: false
                  createdOn: 1495748091232
                  lastModified: 1495748091232
                  tenant: "sample-tenant"
                  roles: []
                  attributes: {}
                  id: "59274dfbd4c650e226b03b65"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_ids:
    get:
      security: []
      tags:
        - profile
      summary: Get Profiles By Ids
      operationId: getProfilesByIds
      description: Returns a list of profiles for the specified IDs.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: query
          description: The IDs of the profiles to look for
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc,59284659d4c650213cc2f3ff
        - name: sortBy
          in: query
          description: Profile attribute to sort the list by
          schema:
            type: string
        - name: sortOrder
          in: query
          description: The sort order (either ASC or DESC)
          schema:
            type: string
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileAttributes'
              example:
                - username: "john.doe"
                  email: "john.doe@example.com"
                  verified: false
                  enabled: false
                  createdOn: 1495748091232
                  lastModified: 1495748091232
                  tenant: "sample-tenant"
                  roles: []
                  attributes: {}
                  id: "59274dfbd4c650e226b03b65"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/range:
    get:
      security: []
      tags:
        - profile
      summary: Get Profiles By Range
      operationId: getProfilesByRange
      description: Returns a range of profiles for the specified tenant.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: sortBy
          in: query
          description: Profile attribute to sort the list by
          schema:
            type: string
        - name: sortOrder
          in: query
          description: The sort order (either ASC or DESC)
          schema:
            type: string
        - name: start
          in: query
          description: From the entire list of results, the position where the actual results should start (useful for pagination)
          schema:
            type: string
        - name: count
          in: query
          description: The number of profiles to return
          schema:
            type: string
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileAttributes'
              example:
                - username: "john.doe"
                  email: "john.doe@example.com"
                  verified: false
                  enabled: false
                  createdOn: 1495748091232
                  lastModified: 1495748091232
                  tenant: "sample-tenant"
                  roles: []
                  attributes: {}
                  id: "59274dfbd4c650e226b03b65"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_role:
    get:
      security: []
      tags:
        - profile
      summary: Get Profiles By Role
      operationId: getProfilesByRole
      description: Returns a list of profiles for a specific role and tenant.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: sortBy
          in: query
          description: Profile attribute to sort the list by
          schema:
            type: string
        - name: sortOrder
          in: query
          description: The sort order (either ASC or DESC)
          schema:
            type: string
        - name: role
          in: query
          description: The role's name
          required: true
          schema:
            type: string
          example: APP_TEST
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileAttributes'
              example:
                - username: "john.doe"
                  email: "john.doe@example.com"
                  verified: false
                  enabled: false
                  createdOn: 1495748091232
                  lastModified: 1495748091232
                  tenant: "sample-tenant"
                  roles: ["APP_TEST", "APP_REPORT"]
                  attributes: {}
                  id: "59274dfbd4c650e226b03b65"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/by_existing_attribute:
    get:
      security: []
      tags:
        - profile
      summary: Get Profiles By Attribute Value
      operationId: getProfilesByAttributeValue
      description: Returns the list of profiles that have the given attribute with the given value.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: sample-tenant
        - name: sortBy
          in: query
          description: Profile attribute to sort the list by
          schema:
            type: string
        - name: sortOrder
          in: query
          description: The sort order (either ASC or DESC)
          schema:
            type: string
        - name: attributeName
          in: query
          description: The name of the attribute the profiles must have
          required: true
          schema:
            type: string
          example: lastName
        - name: attributeValue
          in: query
          description: The value of the attribute the profiles must have
          required: true
          schema:
            type: string
          example: Doe
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileAttributes'
              example:
                - username: "john.doe"
                  email: "john.doe@example.com"
                  verified: false
                  enabled: false
                  createdOn: 1495748091232
                  lastModified: 1495748091232
                  tenant: "sample-tenant"
                  roles: ["APP_TEST", "APP_REPORT"]
                  attributes: {"firstName": "John", "lastName": "Doe"}
                  id: "59274dfbd4c650e226b03b65"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/reset_password:
    post:
      security: []
      tags:
        - profile
      summary: Reset Password
      operationId: resetPassword
      description: Sends an email to the profile’s user to indicate that the password needs to be reset.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile's ID
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc
        - name: resetPasswordUrl
          in: query
          description: The base URL to use to build the final URL the profile will use to reset their password
          required: true
          schema:
            type: string
          example: http://example.com
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {}
                id: "59284659d4c650213cc2f3fc"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/change_password:
    post:
      security: []
      tags:
        - profile
      summary: Change Password
      operationId: changePassword
      description: Resets a profile’s password.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: resetTokenId
          in: query
          description: The reset token ID
          required: true
          schema:
            type: string
          example: a2be0e86-7c71-4edf-aed9-6b00c0c60c33
        - name: newPassword
          in: query
          description: The new password
          required: true
          schema:
            type: string
          example: test123
        - name: attributesToReturn
          in: query
          description: The name of the attributes to return (don't specify to return all)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
              example:
                username: "john.doe"
                email: "john.doe@example.com"
                verified: false
                enabled: false
                createdOn: 1495733716728
                lastModified: 1495733716728
                tenant: "sample-tenant"
                roles: ["APP_TEST", "APP_REPORT"]
                attributes: {}
                id: "59284659d4c650213cc2f3fc"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/verification_token/create:
    post:
      security: []
      tags:
        - profile
      summary: Create Verification Token
      operationId: createVerificationToken
      description: Creates a token that can be sent to the user in an email as a link.<br><br><i>Note:</i><br>After the user clicks the link, the token then can be passed to <b><i>/verify</i></b> or <b><i>/change_password</i></b> to verify user requesting the token.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile ID of the user
          required: true
          schema:
            type: string
          example: 592715d4d4c650e226b03b62
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenant:
                    type: string
                  profileId:
                    type: string
                  timestamp:
                    type: string
                  id:
                    type: string
              example:
                tenant: "sample-tenant"
                profileId: "592715d4d4c650e226b03b62"
                timestamp: 1495746285875
                id: "055d58c4-fabb-44da-96eb-261e24e1d0c9"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/verification_token/{id}:
    get:
      security: []
      tags:
        - profile
      summary: Get Verification Token
      operationId: getVerificationToken
      description: Returns the verification token that corresponds to the given ID.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The token ID
          required: true
          schema:
            type: string
          example: de60f56d-3a4b-4dec-b798-fb22b2964c14
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenant:
                    type: string
                  profileId:
                    type: string
                  timestamp:
                    type: string
                  id:
                    type: string
              example:
                tenant: "sample-tenant"
                profileId: "592715d4d4c650e226b03b62"
                timestamp: 1495746285875
                id: "de60f56d-3a4b-4dec-b798-fb22b2964c14"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/verification_token/{id}/delete:
    post:
      security: []
      tags:
        - profile
      summary: Delete Verification Token
      operationId: deleteVerificationToken
      description: Deletes a verification token when it’s not needed anymore.<br><br><i>Note:</i><br>Not necessary to call if <b><i>/verify</i></b> or <b><i>/change_password</i></b> were called, since they already delete the token.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The token ID
          required: true
          schema:
            type: string
          example: de60f56d-3a4b-4dec-b798-fb22b2964c14
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/uploadAttachment:
    post:
      security: []
      tags:
        - profile
      summary: Upload Profile Attachment
      operationId: uploadProfileAttachment
      description: Upload a attachment to the specified profile.<br><br><i>Note:</i><br>If the mime type of the attachment is not on the valid list will fail.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile's ID
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  description: File to be uploaded.
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttachment'
              example:
                md5: "498a1e16be56873ef53a1a61295d1781"
                contentType: "image/jpeg"
                fileSize: "22.6 KB"
                fileName: "picture1"
                fileSizeBytes: 23193
                id: "59285cd3d4c650213cc2f3fd"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attachment/{attachmentName}:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile Attachment
      operationId: getProfileAttachment
      description: Gets the requested attachment of the given profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile's ID
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc
        - name: attachmentName
          in: path
          description: Name of the attachment to get
          required: true
          schema:
            type: string
          example: picture1
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              example: "image/jpeg;charset=UTF-8"
            Content-Length:
              schema:
                type: integer
                format: int32
              example: 23193
          content:
            image/*:
              schema:
                type: string
                format: binary
            text/*:
              schema:
                type: string
                format: binary
            application/*:
              schema:
                type: string
                format: binary
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attachments:
    get:
      security: []
      tags:
        - profile
      summary: Get All Profile Attachments
      operationId: getAllProfileAttachments
      description: Gets all attachments for the given profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile's ID
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachments:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileAttachment'
                    example:
                      [{md5: "498a1e16be56873ef53a1a61295d1781",
                        contentType: "image/jpeg",
                        fileSize: "22.6 KB",
                        fileName: "picture1",
                        fileSizeBytes: 23193,
                        id: "59285cd3d4c650213cc2f3fd"}]
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/profile/{id}/attachment/{attachmentName}/details:
    get:
      security: []
      tags:
        - profile
      summary: Get Profile Attachment Details
      operationId: getProfileAttachmentDetails
      description: Returns the details for a given attachment in a profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The profile's ID
          required: true
          schema:
            type: string
          example: 59284659d4c650213cc2f3fc
        - name: attachmentName
          in: path
          description: Name of the attachment to get
          required: true
          schema:
            type: string
          example: picture1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAttachment'
              example:
                md5: "498a1e16be56873ef53a1a61295d1781"
                contentType: "image/jpeg"
                fileSize: "22.6 KB"
                fileName: "picture1"
                fileSizeBytes: 23193
                id: "59285cd3d4c650213cc2f3fd"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/authenticate:
    post:
      security: []
      tags:
        - authentication
      summary: Authenticate
      operationId: authenticate
      description: Authenticates the user, and returns a ticket identifying the authentication.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: tenantName
          in: query
          description: The tenant's name
          required: true
          schema:
            type: string
          example: default
        - name: username
          in: query
          description: The username
          required: true
          schema:
            type: string
          example: admin
        - name: password
          in: query
          description: The password
          required: true
          schema:
            type: string
          example: admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                lastRequestedTime: 1495733716728
                id: "59284659d4c650213cc2f3fc"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/ticket/create:
    post:
      security: []
      tags:
        - authentication
      summary: Create Ticket
      operationId: createTicket
      description: Creates a new ticket for the specified profile.<br><br><i>Note:</i><br>This method should only be used when actual authentication is done through other means (like when authenticating through Facebook or Twitter) different than profile.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: profileId
          in: query
          description: The ID of the profile
          required: true
          schema:
            type: string
          example: 5925a68def86951f895cf497
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                lastRequestedTime: 1495733716728
                id: "7f036af3-1ab9-4791-b615-ecaece3f0010"
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/ticket/{ticketId}:
    get:
      security: []
      tags:
        - authentication
      summary: Get Ticket
      operationId: getTicket
      description: Returns the ticket info for the given ticket ID.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: ticketId
          in: path
          description: The ID of the ticket
          required: true
          schema:
            type: string
          example: b4d44030-d0af-11e3-9c1a-0800200c9a66
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                lastRequestedTime: 1495733716728
                id: "2e911e0b-ac47-423e-9174-4e8896f1b387"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/ticket/{ticketId}/invalidate:
    get:
      security: []
      tags:
        - authentication
      summary: Invalidate Ticket
      operationId: invalidateTicket
      description: Invalidates the given ticket.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: ticketId
          in: path
          description: The ID of the ticket
          required: true
          schema:
            type: string
          example: b4d44030-d0af-11e3-9c1a-0800200c9a66
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                lastRequestedTime: 1495733716728
                id: "2e911e0b-ac47-423e-9174-4e8896f1b387"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/persistent_login/create:
    post:
      security: []
      tags:
        - authentication
      summary: Create Persistent Login
      operationId: createPersistentLogin
      description: Creates a persistent login, used for remember me functionality.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: profileId
          in: query
          description: The ID of the profile
          required: true
          schema:
            type: string
          example: 5925a68def86951f895cf497
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                timestamp: 1495733716728
                id: "2e911e0b-ac47-423e-9174-4e8896f1b387"
                token: "adf88dca-4960-474c-be63-c8c5e3bedaa7"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/persistent_login/{id}:
    get:
      security: []
      tags:
        - authentication
      summary: Get Persistent Login
      operationId: getPersistentLogin
      description: Returns the persistent login info for the given ID.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The ID of the persistent login
          required: true
          schema:
            type: string
          example: b68c0013-d7b2-4004-8463-d7ba03e15d94
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                timestamp: 1495733716728
                id: "b68c0013-d7b2-4004-8463-d7ba03e15d94"
                token: "adf88dca-4960-474c-be63-c8c5e3bedaa7"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/persistent_login/{id}/refresh_token:
    post:
      security: []
      tags:
        - authentication
      summary: Refresh Persistent Login
      operationId: refreshPersistentLogin
      description: Refreshes the token of the specified persistent login.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The ID of the persistent login
          required: true
          schema:
            type: string
          example: b68c0013-d7b2-4004-8463-d7ba03e15d94
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationTicket'
              example:
                tenant: default
                profileId: 5925a68def86951f895cf497
                timestamp: 1495733716728
                id: "b68c0013-d7b2-4004-8463-d7ba03e15d94"
                token: "f390e222-c844-44a2-ad38-afa471527101"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/authentication/persistent_login/{id}/delete:
    post:
      security: []
      tags:
        - authentication
      summary: Delete Persistent Login
      operationId: deletePersistentLogin
      description: Deletes a persistent login.
      parameters:
        - name: accessTokenId
          in: query
          description: The access token ID of the application making the call
          required: true
          schema:
            type: string
          example: e8f5170c-877b-416f-b70f-4b09772f8e2d
        - name: id
          in: path
          description: The ID of the persistent login
          required: true
          schema:
            type: string
          example: b68c0013-d7b2-4004-8463-d7ba03e15d94
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/monitoring/memory:
    get:
      security: []
      tags:
        - monitoring
      summary: Get Memory Stats
      operationId: getMemoryStats
      description: Returns the Crafter Profile JVM memory details.
      parameters:
        - name: token
          in: query
          description: The authorization token.
          required: true
          schema:
            type: string
          example: defaultManagementToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringJVMMemoryStats'
              example:
                totalJvmMemory: 2017984512
                freeJvmMemory: 1113921056
                maxJvmMemory: 3817865216
                totalOsMemory: 17179869184
                freeOsMemory: 2669301760
                totalSwapMemory: 2147483648
                freeSwapMemory: 1026555904
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/monitoring/status:
    get:
      security: []
      tags:
        - monitoring
      summary: Get Status
      operationId: getStatus
      description: Returns the Crafter Profile JVM status details.
      parameters:
        - name: token
          in: query
          description: The authorization token.
          required: true
          schema:
            type: string
          example: defaultManagementToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringStatus'
              example:
                uptime: 4801
                startup: "2019-03-07T21:29:11.049Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/1/monitoring/version:
    get:
      security: []
      tags:
        - monitoring
      summary: Get Version
      operationId: getVersion
      description: Returns the Crafter Profile JVM version details.
      parameters:
        - name: token
          in: query
          description: The authorization token.
          required: true
          schema:
            type: string
          example: defaultManagementToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringStatus'
              example:
                packageName: "Crafter Profile"
                packageVersion: "3.1.0-SNAPSHOT"
                packageBuild: "a68f1ff7ad84d5ecbeaa008f392e4cef0ca02f41"
                packageBuildDate: "2019-03-07T21:03:05.422Z"
                osName: "Mac OS X"
                osVersion: "10.13.6"
                osArch: "x86_64"
                javaVersion: "1.8"
                javaVendor: "Oracle Corporation"
                javaVm: "Java HotSpot(TM) 64-Bit Server VM"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    AccessToken:
      type: object
      properties:
        application:
          type: string
        master:
          type: boolean
        tenantPermissions:
          type: array
          items:
            type: object
            properties:
              allowedActions:
                type: array
              tenant:
                type: string
        expiresOn:
          type: integer
        id:
          type: string

    ProfileTenantAttribute:
      type: object
      properties:
        name:
          type: string
        metadata:
          type: object
          properties:
            label:
              type: string
            type:
              type: string
            displayOrder:
              type: number
              format: float
        permissions:
          type: array
          items:
            type: object
            properties:
              application:
                type: string
              allowedActions:
                type: array
                items:
                  type: string
        defaultValue:
          type: object

    ProfileTenant:
      type: object
      properties:
        name:
          type: string
        verifyNewProfiles:
          type: boolean
        ssoEnabled:
          type: boolean
        availableRoles:
          type: array
          items:
            type: string
        attributeDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTenantAttribute'
        id:
          type: string

    Profile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        verified:
          type: boolean
        enabled:
          type: boolean
        createdOn:
          type: number
        lastModified:
          type: number
        tenant:
          type: string
        roles:
          type: array
          items:
            type: string
        attributes:
          $ref: '#/components/schemas/ProfileAttributes'
        id:
          type: string

    UserProfile:
      type: object
      properties:
        age:
          type: integer
        username:
          type: string
        lastname:
          type: string

    ProfileAttributes:
      type: object
      description: >-
        Object containing attributes for the profile
      additionalProperties:
        type: string

    ProfileAttachment:
      type: object
      properties:
        md5:
          type: string
        contentType:
          type: string
        fileSize:
          type: string
        fileName:
          type: string
        fileSizeBytes:
          type: integer
          format: int32
        id:
          type: string

    AuthenticationTicket:
      type: object
      properties:
        tenant:
          type: string
        profileId:
          type: string
        lastRequestTime:
          type: string
        id:
          type: string
        token:
          type: string
        timestamp:
          type: string

    MonitoringJVMMemoryStats:
      type: object
      properties:
        totalJvmMemory:
          type: integer
          format: int64
        freeJvmMemory:
          type: integer
          format: int64
        maxJvmMemory:
          type: integer
          format: int64
        totalOSMemory:
          type: integer
          format: int64
        freeOSMemory:
          type: integer
          format: int64
        totalSwapMemory:
          type: integer
          format: int64
        freeSwapMemory:
          type: integer
          format: int64

    MonitoringStatus:
      type: object
      properties:
        uptime:
          type: integer
          format: int32
        startup:
          type: string
          format: date-time

    MonitoringJVMVersion:
      type: object
      properties:
        packageName:
          type: string
        packageVersion:
          type: string
        packageBuild:
          type: string
        packageBuildDate:
          type: string
          format: date-time
        osName:
          type: string
        osVersion:
          type: string
        osArch:
          type: string
        javaVersion:
          type: string
        javaVendor:
          type: string
        javaVm:
          type: string

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
          examples:
            access_token:
              value:
                errorCode: "ACTION_DENIED"
                message: "Current subject does not have permission to execute global action \"CREATE_TOKEN\""
            tenant:
              value:
                errorCode: "TENANT_EXISTS"
                message: "The tenant \"sample-tenant\" already exists"
            profile:
              value:
                errorCode: "PROFILE_EXISTS"
                message: "A profile with name \"john.doe\" already exists"

    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
          examples:
            tenant:
              value:
                errorCode:
                  NO_SUCH_TENANT
                message:
                  "No tenant with name ‘sample-tenant’ found"
            monitoring:
              value:
                errorCode:
                  OTHER
                message:
                  ”Required String parameter ‘token’ is not present”

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
          examples:
            authentication:
              value:
                errorCode:
                  BAD_CREDENTIALS
                message:
                  "Invalid username and/or password"
            monitoring:
              value:
                errorCode:
                  ACCESS_DENIED
                message:
                  ”Management authorization failed, invalid token.”

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
          examples:
            accessToken:
              value:
                errorCode: ACTION_DENIED
                message: Current subject does not have permission to execute global action \"CREATE_TOKEN\"
            profile:
              value:
                errorCode: DISABLED_PROFILE
                message: Profile \"59284659d4c650213cc2f3fc\" of tenant \"sample-tenant\" is disabled
            authentication:
              value:
                errorCode: NO_SUCH_ACCESS_TOKEN_ID
                message: No access token found for ID \"e8f5170c-877b-416f-b70f-4b09772f8e2d\"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Internal Server Error

  examples:
    userProfileExample:
      value:
        age: 30
        username: john
        lastname: doe
