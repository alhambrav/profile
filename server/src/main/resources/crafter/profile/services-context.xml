<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired, as well as JSR
    250's @PostConstruct, @PreDestroy and @Resource (if available), JAX-WS's @WebServiceRef (if available), EJB3's @EJB
    (if available), and JPA's @PersistenceContext and @PersistenceUnit (if available).
    -->
    <context:annotation-config/>

    <bean name="profile.properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <!-- <property name="ignoreResourceNotFound" value="true"/> -->
        <property name="locations">
            <list>
                <value>classpath:crafter/profile/server-config.properties</value>
                <value>classpath*:crafter/profile/extension/server-config.properties</value>
            </list>
        </property>
    </bean>

    <!-- Mongo -->

    <bean id="profile.mongoClientOptionsFactory" class="org.craftercms.commons.mongo.MongoClientOptionsFactory">
        <property name="autoConnectRetry" value="${crafter.profile.mongodb.connection.autoConnectRetry}"/>
        <property name="connectionsPerHost" value="${crafter.profile.mongodb.connection.connectionsPerHost}"/>
        <property name="maxAutoConnectRetryTime" value="${crafter.profile.mongodb.connection.maxWaitTime}"/>
        <property name="socketKeepAlive" value="${crafter.profile.mongodb.connection.socketKeepAlive}"/>
        <property name="threadsAllowedToBlockForConnectionMultiplier"
                  value="${crafter.profile.mongodb.connection.threadsAllowedToBlockForConnectionMultiplier}"/>
        <property name="connectTimeout" value="${crafter.profile.mongodb.connection.connectTimeout}"/>
        <property name="writeConcern" value="${crafter.profile.mongodb.connection.writeConcern}"/>
        <property name="readPreference" value="${crafter.profile.mongodb.connection.readPreference}"/>
    </bean>


    <bean id="profile.mongoClient" class="com.mongodb.MongoClient">
        <constructor-arg>
            <list>
                <bean class="com.mongodb.ServerAddress">
                    <constructor-arg value="${crafter.profile.mongodb.connection.host}"/>
                    <constructor-arg value="${crafter.profile.mongodb.connection.port}"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg ref="profile.mongoClientOptionsFactory"/>
    </bean>

    <bean id="profile.jongo" class="org.craftercms.commons.mongo.JongoFactoryBean">
        <property name="mongo" ref="profile.mongoClient"/>
        <property name="username" value="${crafter.profile.mongodb.connection.dbUsername}"/>
        <property name="password" value="${crafter.profile.mongodb.connection.dbPassword}"/>
        <property name="dbName" value="${crafter.profile.mongodb.connection.dbName}"/>
    </bean>

    <bean id="profile.jongoQueries" class="org.craftercms.commons.mongo.JongoQueries" init-method="init">
        <property name="queryFiles">
            <list>
                <value>classpath:/crafter/profile/access-token-manager-queries.xml</value>
                <value>classpath:/crafter/profile/profile-queries.xml</value>
                <value>classpath:/crafter/profile/extension/profile-queries.xml</value>
            </list>
        </property>
    </bean>

    <bean id="profile.jongoRepositoryBase" class="org.craftercms.commons.mongo.JongoRepository" abstract="true">
        <property name="jongo" ref="profile.jongo"/>
        <property name="queries" ref="profile.jongoQueries"/>
    </bean>

    <bean id="profile.accessTokenRepository" class="org.craftercms.profile.repositories.impl.AccessTokenRepositoryImpl"
          parent="profile.jongoRepositoryBase"/>

    <bean id="profile.profileRepository" class="org.craftercms.profile.v2.repositories.impl.ProfileRepositoryImpl"
          parent="profile.jongoRepositoryBase"/>

    <bean id="profile.tenantRepository" class="org.craftercms.profile.v2.repositories.impl.TenantRepositoryImpl"
          parent="profile.jongoRepositoryBase"/>

    <bean id="profile.ticketRepository" class="org.craftercms.profile.v2.repositories.impl.TicketRepositoryImpl"
          parent="profile.jongoRepositoryBase"/>

    <bean id="profile.verificationTokenRepository"
          class="org.craftercms.profile.v2.repositories.impl.VerificationTokenRepositoryImpl"
          parent="profile.jongoRepositoryBase"/>
    
    <bean id="profile.mongoInitScriptRunner" class="org.craftercms.commons.mongo.MongoScriptRunner">
        <property name="mongo" ref="profile.mongoClient"/>
        <property name="dbName" value="${crafter.profile.mongodb.connection.dbName}"/>
        <property name="username" value="${crafter.profile.mongodb.connection.dbUsername}"/>
        <property name="password" value="${crafter.profile.mongodb.connection.dbPassword}"/>
        <property name="runOnInit" value="${crafter.profile.mongodb.scripts.runOnInit}"/>
        <property name="scriptPaths" value="${crafter.profile.mongodb.scripts.paths}"/>
    </bean>

    <!-- Mail -->

    <bean id="profile.mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${crafter.profile.mail.host}"/>
        <property name="port" value="${crafter.profile.mail.port}"/>
        <property name="protocol" value="${crafter.profile.mail.protocol}"/>
        <property name="username" value="${crafter.profile.mail.username}"/>
        <property name="password" value="${crafter.profile.mail.password}"/>
        <property name="defaultEncoding" value="${crafter.profile.mail.encoding}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${crafter.profile.mail.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${crafter.profile.mail.smtp.starttls.enable}</prop>
            </props>
        </property>
    </bean>

    <bean id="profile.mailFreeMarkerConfig" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPaths" value="${crafter.profile.mail.templates.path}" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="profile.emailFactory" class="org.craftercms.commons.mail.impl.EmailFactoryImpl">
        <property name="mailSender" ref="profile.mailSender"/>
        <property name="freeMarkerConfig" ref="profile.mailFreeMarkerConfig"/>
    </bean>

    <!-- Permissions -->

    <bean id="profile.appSubjectResolver" class="org.craftercms.profile.v2.permissions.ApplicationSubjectResolver"/>

    <bean id="profile.tenantPermissionResolver" class="org.craftercms.profile.v2.permissions.TenantPermissionResolver"/>

    <bean id="profile.attributePermissionResolver"
          class="org.craftercms.profile.v2.permissions.AttributePermissionResolver"/>

    <bean id="profile.tenantPermissionEvaluator"
          class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <property name="subjectResolver" ref="profile.appSubjectResolver"/>
        <property name="permissionResolver" ref="profile.tenantPermissionResolver"/>
    </bean>

    <bean id="profile.attributePermissionEvaluator"
          class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <property name="subjectResolver" ref="profile.appSubjectResolver"/>
        <property name="permissionResolver" ref="profile.attributePermissionResolver"/>
    </bean>

    <!-- Services -->

    <bean id="profile.verificationServiceBase"
          class="org.craftercms.profile.v2.services.impl.VerificationServiceImpl" abstract="true">
        <property name="emailFactory" ref="profile.emailFactory"/>
        <property name="tokenRepository" ref="profile.verificationTokenRepository"/>
        <property name="tokenMaxAge" value="${crafter.profile.verification.token.maxAge}"/>
    </bean>

    <bean id="profile.newProfileVerificationService" parent="profile.verificationServiceBase">
        <property name="from" value="${crafter.profile.verification.newProfile.mail.from}"/>
        <property name="subject" value="${crafter.profile.verification.newProfile.mail.subject}"/>
        <property name="templateName" value="${crafter.profile.verification.newProfile.mail.templateName}"/>
    </bean>


    <bean id="profile.resetPasswordVerificationService" parent="profile.verificationServiceBase">
        <property name="from" value="${crafter.profile.verification.resetPassword.mail.from}"/>
        <property name="subject" value="${crafter.profile.verification.resetPassword.mail.subject}"/>
        <property name="templateName" value="${crafter.profile.verification.resetPassword.mail.templateName}"/>
    </bean>

    <bean id="profile.tenantService" class="org.craftercms.profile.v2.services.impl.TenantServiceImpl">
        <property name="tenantRepository" ref="profile.tenantRepository"/>
        <property name="profileRepository" ref="profile.profileRepository"/>
        <property name="permissionEvaluator" ref="profile.tenantPermissionEvaluator"/>
        <property name="profileService" ref="profile.profileService"/>
    </bean>

    <bean id="profile.profileService" class="org.craftercms.profile.v2.services.impl.ProfileServiceImpl">
        <property name="profileRepository" ref="profile.profileRepository"/>
        <property name="tenantService" ref="profile.tenantService"/>
        <property name="authenticationService" ref="profile.authenticationService"/>
        <property name="newProfileVerificationService" ref="profile.newProfileVerificationService"/>
        <property name="resetPasswordVerificationService" ref="profile.resetPasswordVerificationService"/>
        <property name="tenantPermissionEvaluator" ref="profile.tenantPermissionEvaluator"/>
        <property name="attributePermissionEvaluator" ref="profile.attributePermissionEvaluator"/>
    </bean>

    <bean id="profile.authenticationService" class="org.craftercms.profile.v2.services.impl.AuthenticationServiceImpl">
        <property name="ticketMaxAge" value="${crafter.profile.auth.ticket.maxAge}"/>
        <property name="ticketRepository" ref="profile.ticketRepository"/>
        <property name="profileService" ref="profile.profileService"/>
        <property name="permissionEvaluator" ref="profile.tenantPermissionEvaluator"/>
    </bean>

    <!-- Quartz -->

    <!--bean id="profile.ticketCleanerJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetBeanName" value="profile.ticketRepository"/>
        <property name="targetMethod" value="removeWithLastRequestTimeOlderThan"/>
        <property name="arguments">
            <array>
                <value>${crafter.profile.auth.ticket.maxAge}</value>
            </array>
        </property>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="profile.ticketCleanerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="startDelay" value="${crafter.profile.auth.ticket.cleaner.startDelay}"/>
        <property name="repeatInterval" value="${crafter.profile.auth.ticket.cleaner.repeatInterval}"/>
        <property name="jobDetail" ref="crafter.ticketCleanerJobDetail"/>
    </bean>

    <bean id="profile.schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="crafter.ticketCleanerTrigger"/>
            </list>
        </property>
    </bean-->

    <import resource="classpath*:crafter/profile/extension/services-context.xml"/>

</beans>